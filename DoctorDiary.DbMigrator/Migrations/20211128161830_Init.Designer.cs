// <auto-generated />
using System;
using DoctorDiary.DbMigrator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoctorDiary.DbMigrator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211128161830_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DoctorDiary.Models.PatientCards.PatientCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("Address");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("DATE")
                        .HasColumnName("Birthday");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("Description");

                    b.Property<string>("FirstName")
                        .HasColumnType("NVARCHAR(30)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .HasColumnType("NVARCHAR(30)")
                        .HasColumnName("LastName");

                    b.Property<string>("Patronymic")
                        .HasColumnType("NVARCHAR(30)")
                        .HasColumnName("Patronymic");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR(30)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("Snils")
                        .HasColumnType("NVARCHAR(30)")
                        .HasColumnName("Snils");

                    b.HasKey("Id");

                    b.ToTable("PatientCards");
                });

            modelBuilder.Entity("DoctorDiary.Models.SickLeaves.SickLeave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Number")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Number");

                    b.Property<Guid>("PatientCardId")
                        .HasColumnType("TEXT")
                        .HasColumnName("PatientCardId");

                    b.HasKey("Id");

                    b.HasIndex("PatientCardId");

                    b.ToTable("SickLeaves");
                });

            modelBuilder.Entity("DoctorDiary.Models.SickLeaves.SickLeave", b =>
                {
                    b.HasOne("DoctorDiary.Models.PatientCards.PatientCard", null)
                        .WithMany()
                        .HasForeignKey("PatientCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("DoctorDiary.Models.SickLeaves.ValueObjects.Term", "Terms", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("EndDate");

                            b1.Property<Guid>("SickLeaveId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("StartDate");

                            b1.HasKey("Id");

                            b1.HasIndex("SickLeaveId");

                            b1.ToTable("TermsOfSickLeaves");

                            b1.WithOwner()
                                .HasForeignKey("SickLeaveId");
                        });

                    b.Navigation("Terms");
                });
#pragma warning restore 612, 618
        }
    }
}
